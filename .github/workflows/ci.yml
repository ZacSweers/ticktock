name: CI

on: [push]

env:
  ANDROID_HOME: "/Users/runner/Library/android-sdk"
  ANDROID_SDK_TOOLS: "6609375_latest"

jobs:
  build:
    name: JDK ${{ matrix.java_version }}
    runs-on: macOS-latest
    strategy:
      matrix:
        java_version: [1.8, 9, 10, 11, 12, 13, 14, 15]
      fail-fast: false
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install JDK ${{ matrix.java_version }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java_version }}
    - name: Install Android SDK
      run: ./.github/android-sdk.sh
    - name: Prepare CI Gradle configuration
      run: cp .github/ci-gradle.properties ~/.gradle/gradle.properties
    - name: Configure Gradle + spot check
      # Initial gradle configuration, install dependencies, check formatting, etc
      run: ./gradlew spotlessCheck
    - name: Build project
      run: ./gradlew assemble --stacktrace
    - name: Run tests
      run: ./gradlew test --stacktrace
    - name: Add Android SDK to path
      run: |
        echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV
        echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
    - name: Run instrumentation tests
      uses: reactivecircus/android-emulator-runner@v2.14.2
      with:
        # Need an API lower than 26 to properly test this
        api-level: 25
        script: ./gradlew connectedCheck --stacktrace
    - name: (Fail-only) Bundle the build report
      if: failure()
      run: find . -type d -name 'reports' | zip -@ -r build-reports.zip
    - name: (Fail-only) Upload the build report
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: error-report
        path: build-reports.zip
    - name: Final checks
      run: ./gradlew check --stacktrace
    - name: Reclaim memory
      run: ./gradlew --stop && jps|grep -E 'KotlinCompileDaemon|GradleDaemon'| awk '{print $1}'| xargs kill -9
      if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request' && matrix.java_version == '1.8'
    - name: Upload snapshot (main only)
      run: ./publish.sh -PSONATYPE_NEXUS_USERNAME=${{ secrets.SonatypeUsername }} -PSONATYPE_NEXUS_PASSWORD=${{ secrets.SonatypePassword }}
      if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request' && matrix.java_version == '1.8'
