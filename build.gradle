/*
 * Copyright (C) 2020 Zac Sweers & Gabriel Ittner
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
  dependencies {
    // Needs to go first, else gradle's forced older version version takes precedence
    classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.30")
    classpath("dev.zacsweers.ticktock:ticktock-gradle-plugin:${findProperty("VERSION_NAME")}")
    classpath("com.android.tools.build:gradle:7.0.2")
  }
}

plugins {
  id 'org.jetbrains.kotlin.jvm' apply false version '1.4.30'
  id 'org.jetbrains.kotlin.kapt' apply false version '1.4.30'
  id 'com.diffplug.spotless' apply false version '5.14.3'
  id 'com.vanniktech.maven.publish' apply false version '0.17.0'
  id 'org.jetbrains.dokka' apply false version '1.5.0'
  id("org.jetbrains.kotlinx.binary-compatibility-validator") version "0.7.1"
}

subprojects {
  apply from: rootProject.file('gradle/dependencies.gradle')

  repositories {
    mavenCentral()
    google()
  }

  pluginManager.withPlugin('java') {
    java {
      toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
      }
    }
    tasks.withType(JavaCompile).configureEach {
      options.release.set(8)
    }
  }

  pluginManager.withPlugin('org.jetbrains.kotlin.jvm') {
    compileKotlin {
      kotlinOptions {
        jvmTarget = deps.build.kotlin.jvmTarget
        freeCompilerArgs += deps.build.kotlin.defaultFreeCompilerArgs
      }
    }

    if (project.name != "sample" && project.name != "tests") {
      kotlin {
        explicitApi()
      }
    }

    compileTestKotlin {
      kotlinOptions {
        jvmTarget = deps.build.kotlin.jvmTarget
        freeCompilerArgs += deps.build.kotlin.defaultFreeCompilerArgs
      }
    }
  }

  pluginManager.withPlugin('org.jetbrains.dokka') {
    tasks.named("dokkaHtml") {
      it.outputDirectory.set(rootProject.file("docs/0.x"))
      it.dokkaSourceSets.configureEach {
        it.skipDeprecated.set(true)
      }
    }
  }

  apply from: rootProject.file('gradle/config-spotless.gradle')
}

apply from: 'gradle/dependencies.gradle'
